using System;
using System.Text;
using GrpcProxyGenerator.DataTypes;
using GrpcProxyGenerator.Extensions;
using GrpcProxyGenerator.Service.Interface;
using GrpcProxyGenerator.Service.InternalGenerators;
using GrpcProxyGenerator.Service.InternalGenerators.Interface;

namespace GrpcProxyGenerator.Service
{
	public class GrpcProxyFactory : IGrpcProxyFactory
	{
		private readonly IGrpcProxyEmitter _grpcProxyEmitter;

		private readonly ITypeInfoProvider _typeInfoProvider;

		private readonly IProxyInternalsGenerator _proxyGenerator;

		public GrpcProxyFactory(
			IGrpcProxyEmitter grpcProxyEmitter,
			ITypeInfoProvider typeInfoProvider)
		{
			_grpcProxyEmitter = grpcProxyEmitter;
			_typeInfoProvider = typeInfoProvider;
			_proxyGenerator = new DeploymentProxyInternalsGenerator();
		}

		public void GenerateProxy(Type proxyInterface)
		{
			var proxyMetaData = _typeInfoProvider.GetMetaData(proxyInterface);

			var proxyCodeBuilder = new StringBuilder();

			AppendAutoGeneratedComment(proxyCodeBuilder);

			proxyCodeBuilder.AppendLine("namespace IdeaMachine.Common.RemotingProxies.Proxies");
			proxyCodeBuilder.AppendLine("{");
			proxyCodeBuilder.Tab().AppendLine($"public class {proxyMetaData.ServiceNameShort}Proxy : {GetKubernetesType(proxyMetaData)}<{proxyMetaData.Type.FullName}>, {proxyMetaData.Type.FullName}");
			proxyCodeBuilder.Tab().AppendLine("{");

			GenerateClassInternals(proxyCodeBuilder, proxyMetaData);

			proxyCodeBuilder.Tab().AppendLine("}");
			proxyCodeBuilder.AppendLine("}");

			var builtProxy = proxyCodeBuilder.ToString();

			_grpcProxyEmitter.EmitProxy(builtProxy, proxyMetaData);
		}

		private static void AppendAutoGeneratedComment(StringBuilder proxyCodeBuilder)
		{
			proxyCodeBuilder.AppendLine("//----------------------");
			proxyCodeBuilder.AppendLine($"//This file was autogenerated by {typeof(GrpcProxyFactory)}");
			proxyCodeBuilder.AppendLine($"//Timestamp of generation: UTC {DateTime.UtcNow}");
			proxyCodeBuilder.AppendLine("//----------------------");
			proxyCodeBuilder.LineBreak();
		}

		private void GenerateClassInternals(StringBuilder proxyCodeBuilder, ProxyMetaData proxyMetaData)
		{
			_proxyGenerator.GenerateProxyInternals(proxyCodeBuilder, proxyMetaData);
		}

		private static string GetKubernetesType(ProxyMetaData proxyMetaData)
		{
			return "IdeaMachine.Common.RemotingProxies.ProxyInvocation.AbstractDeploymentProxy";
		}
	}
}